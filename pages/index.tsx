import { wrapper } from 'app/store';
import { selectProfile, setProfileData } from 'app/store/slices/profile';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useSelector } from 'react-redux';
import Aside from './Aside';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import Content from './Content';
import stylesMain from '../styles/components/Main.module.css';
import styles from '../styles/components/Home.module.scss';
// eslint-disable-next-line @typescript-eslint/no-unused-vars

const Home: NextPage = (props: any) => {
  const profile = useSelector(selectProfile);
  console.log(profile);
  console.log(props.items.data.categories);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://featuringcode.com">Featuring Code</a>,
        </h1>

        <p className={styles.description}>
          Go to
          <Link href="/profile">
            <a>Profile</a>
          </Link> {' | '}
          <Link href="/product">
            <a>Product</a>
          </Link>
        </p>
        <p>{props.data}</p>
        <section className={stylesMain.main__container}>
          <Aside item={props.items.data.categories}/>
          {/*<Content/>*/}
        </section>
      </main>
      <footer className={styles.footer}>
      </footer>
    </div>
  );
};

// eslint-disable-next-line @typescript-eslint/no-unused-vars
export const getServerSideProps = wrapper.getServerSideProps(store => async ({ query }) => {
  const baseUrl = 'https://bion.biz-mark.ru/api/v1/general';
  const response = await fetch(`${baseUrl}/categories`);
  const items = await response.json();
  console.log('store state on the server before dispatch', store.getState());
  store.dispatch(setProfileData(items.data.categories));
  console.log('store state on the server after dispatch', store.getState());

  // const data = query.data || 'default data';
  //  http://localhost:3000?data='some-data'

  return {
    props: {
      items
    } // will be passed to the page component as props
  };
});

export default Home;
